.thread.thread-recording.recording-wrapper.recording-simple{:class => "#{cycle("thread-even" , "thread-odd")}", :id => "recording-#{recording.id}"}

  %ul.management-links
    -if recording.available
      - if recording.playback_formats.size > 0
        = link_to "#", class: 'showplayback' do
          = icon_list(:alt => t('.show_playback'), :title => t('.show_playback'), :class => "enabled")
      - if recording.playback_formats.size == 0
        = icon_list(:alt => t('.show_playback_none'), :title => t('.show_playback_none'), :class => "disabled")

    = link_to edit_bigbluebutton_recording_path(recording) do
      = icon_edit(:alt => t('.edit'), :title => t('.edit'))

    - if recording.available
      - if !recording.published
        = link_to publish_bigbluebutton_recording_path(recording), :data => { :confirm => t('are_you_sure') }, :method => :post do
          = icon_publish(:alt => t('.publish'), :title => t('.publish'))

    - if recording.available
      - if recording.published
        = link_to unpublish_bigbluebutton_recording_path(recording), :data => { :confirm => t('are_you_sure') }, :method => :post do
          = icon_unpublish(:alt => t('.unpublish'), :title => t('.unpublish'))

    = link_to bigbluebutton_recording_path(recording, :redir_url => manage_recordings_path), :data => { :confirm => t('.confirm_delete') }, :method => :delete do
      = icon_delete(:alt => t('.delete'), :title => t('.delete'))

  .thread-title
    - if recording.available
      = link_to bigbluebutton_recording_path(recording), :class => 'recording-name' do
        = Mconf::Highlighter.highlight(recording.name, params[:q].try(:split))

    - else
      %span.recording-not-available-name
        = link_to bigbluebutton_recording_path(recording), :class => 'recording-name' do
          = Mconf::Highlighter.highlight(recording.name, params[:q].try(:split))

    .recording-description
      = Mconf::Highlighter.highlight(sanitize(first_words(recording.description, 100)), params[:q].try(:split))

  .recording-metadata
    %div.metadata-published
      - if recording.published?
        .badge.badge-success= t('.published')
      - else
        .badge.badge-important= t('.unpublished')
    %div.metadata-size
      .badge
        = human_file_size(recording.size)

    %div
      = t('.recordid') + ": "
      = link_to bigbluebutton_recording_path(recording) do
        = Mconf::Highlighter.highlight(recording.recordid, params[:q].try(:split))
    %div
      = t('.room_name') + ": "
      = link_to bigbluebutton_room_path(recording.room) do
        = Mconf::Highlighter.highlight(recording.room.name, params[:q].try(:split))
    - if recording.room.owner.present?
      %div
        = t(".owner_type_#{recording.room.owner.class.name.downcase}") + ": "
        = link_to recording.room.owner.name, polymorphic_path(recording.room.owner)
    %div
      = t('.created_at') + ": "
      %span.tooltipped{title: recording.start_time}
        = format_date(recording.start_time, :long)

  .playback-types
    %h5= t(".playback_links")
    = render 'shared/recording_playback', recording: recording, show_invisible: true
